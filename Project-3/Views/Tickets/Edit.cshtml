@model Project_3.Models.Ticket

@{
    ViewBag.Title = "Edit";
}




    <section role="main" class="content-body dash">
        <!--Header-->
        <header class="page-header">
            <h2>@ViewBag.Title</h2>

            <div class="right-wrapper pull-right">
                <ol class="breadcrumbs">
                    <li>
                        <a href="@Url.Action("Dashboard","Home")">
                            <i class="fa fa-home"></i>   <span> Go to DashBoard</span>
                        </a>
                    </li>

                    <li style="padding-right:10px"><span>@ViewBag.Title</span></li>
                </ol>

            </div>
        </header>
        <h2 class="htwo">EDIT DETAILS OF TICKET</h2>

        @if (User.IsInRole("DemoAdmin") || User.IsInRole("ProjectManager"))
        {
            <div class="row" style="padding-top:30px">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.OwnerUserId)
                    @Html.HiddenFor(model => model.AssignedToUserId)
                    @Html.HiddenFor(model => model.ProjectId)


                    @*<div class="form-group">
                        @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUser:  ", htmlAttributes: new { @class = "control-label col-md-2 text-dark" })
                        <div class="col-lg-8">
                            @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "TicketStatus:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, "TicketPriority:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketTypeId, "TicketType:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, "Title:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="padding-top:20px">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-danger">SUBMIT CHANGE</button>
                        </div>
                    </div>


                </div>
                }




            </div>
        }
        else
         {
            <div class="row" style="padding-top:30px">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.OwnerUserId)
                    @Html.HiddenFor(model => model.ProjectId)
                    @Html.HiddenFor(model => model.AssignedToUserId)
                    @Html.HiddenFor(model => model.TicketStatusId)



                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, "TicketPriority:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketTypeId, "TicketType:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, "Title:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "Description:  ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-lg-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="padding-top:20px">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-danger">SUBMIT CHANGE</button>
                        </div>
                    </div>


                </div>
                }




            </div>
        }


    </section>